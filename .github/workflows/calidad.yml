# Este flujo de trabajo pretende validar la calidad del código lin

name: calidad con codeql

on:
  push:
    branches: [BagManager]
  pull_request:
    branches: [BagManager]
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Establezco el JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        # Initializes the CodeQL tools for scanning.
    - name: Inicio CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        # queries: ./path/to/local/query, your-org/your-repo/queries@main

    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
    #- name: Autobuild
    #  uses: github/codeql-action/autobuild@v1

    # ℹ️ Command-line programs to run using the OS shell.
    # 📚 https://git.io/JvXDl

    # ✏️ If the Autobuild fails above, remove it and uncomment the following three lines
    #    and modify them (or add more) to build your code if your project
    #    uses a compiled language

    #- run: |
    #   make bootstrap
    #   make release
      #en lugar de usar lo que pone el action que reutilizo utilizo la construcción con gradle
    - name: doy permisos de ejecución a gradlew
      run: chmod +x gradlew
    - name: ejeuto la tarea de construcción
      run: ./gradlew assemble
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
